version: '3.8'

services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  # Kafka for messaging
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # MySQL database for event-service
  event-db:
    image: mysql:8.0
    container_name: event-db
    environment:
      MYSQL_ROOT_PASSWORD: root@2726
      MYSQL_DATABASE: events
      MYSQL_USER: root
      MYSQL_PASSWORD: root@2726
    ports:
      - "3306:3306"
    volumes:
      - event-db-data:/var/lib/mysql

  # MySQL database for order-service
  order-db:
    image: mysql:8.0
    container_name: order-db
    environment:
      MYSQL_ROOT_PASSWORD: root@2726
      MYSQL_DATABASE: orders
      MYSQL_USER: root
      MYSQL_PASSWORD: root@2726
    ports:
      - "3307:3306"
    volumes:
      - order-db-data:/var/lib/mysql

  # MySQL database for user-service
  user-db:
    image: mysql:8.0
    container_name: user-db
    environment:
      MYSQL_ROOT_PASSWORD: root@2726
      MYSQL_DATABASE: users
      MYSQL_USER: root
      MYSQL_PASSWORD: root@2726
    ports:
      - "3308:3306"
    volumes:
      - user-db-data:/var/lib/mysql

  # Event Service
  event-service:
    build:
      context: ./event-service
      dockerfile: Dockerfile
    container_name: event-service
    depends_on:
      - kafka
      - event-db
    ports:
      - "8086:8086"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://event-db:3306/events?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root@2726
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    depends_on:
      - kafka
      - order-db
    ports:
      - "8089:8089"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://order-db:3306/orders?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root@2726
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    depends_on:
      - kafka
      - user-db
    ports:
      - "8087:8087"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://user-db:3306/users?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root@2726
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

volumes:
  event-db-data:
  order-db-data:
  user-db-data:
